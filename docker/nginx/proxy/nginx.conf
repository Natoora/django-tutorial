worker_processes 4;
events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	# Backend and Websockets upstream servers
	upstream backend_servers {
        # server_backend_placeholder
		server XXXXXXXXXX:8000;
    }

    server {
        listen 80;

         # Django Media
        location /media {
            alias /media;
            gzip_static on;
            expires 1y;
            add_header Cache-Control public;
            add_header ETag "";
            access_log off;
        }

        # Django Staticfiles
        location /static {
            alias /static;
            gzip_static on;
            expires 1y;
            add_header Cache-Control public;
            add_header ETag "";
            access_log off;
        }

		# Proxy pass admin URL requests to upstream app servers
    	location /admin {
        	proxy_set_header  Host $host;
        	proxy_redirect off;
        	proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto https;
        	proxy_pass http://XXXXX:8000;
    	}

		# backends
        location / {
			proxy_pass http://XXXXXXX;

        	proxy_set_header X-Real-IP $remote_addr;

        	# proxy_buffering off for proxying to websockets
        	proxy_buffering off;

        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        	# enable this if you use HTTPS:
        	proxy_set_header X-Forwarded-Proto https;

        	# pass the Host: header from the client for the sake of redirects
        	proxy_set_header  Host $host;

        	# We've set the host header, so we don't need Nginx to muddle about with redirects
        	proxy_redirect off;

        	# WebSocket support. Depending on the request value, set the Upgrade and connection headers
        	proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection "upgrade";

        	# Sets the HTTP protocol version for proxying. By default, version 1.0 is used.
        	# Version 1.1 is recommended for use with keepalive connections and NTLM authentication.
        	proxy_http_version 1.1;

        	# timeout config
        	proxy_connect_timeout 600;
        	proxy_send_timeout 600;
        	proxy_read_timeout 600;
        	send_timeout 600;
        }
    }
}
